---
- hosts: all
  vars:
    rock_debug: "{{ lookup('env', 'DEBUG') }}"
    http_proxy: "{{ lookup('env','http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
  tasks:
  - name: Get default settings
    include_vars: rocknsm_config.dist.yml
  - name: Get OS specific settings
    include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
      - "{{ ansible_distribution }}.yml"
    tags: vars
  - name: Apply override settings, if available
    include_vars: /etc/rocknsm/config.yml
    ignore_errors: true
    failed_when: false
  - name: Debug variables
    include: debug.yml
    when: rock_debug is defined and rock_debug

  - include_role:
      name: common
  
  - include_role:
      name: common_sensor
      
  - include_role:
      name: suricata
      
  # TODO: CURRENTLY BROKEN NEED TO FIX    
  - include_role:
      name: docker
  
  - include_role:
      name: zookeeper
      
  - include_role:
      name: kafka
      
  - include_role:
      name: elasticsearch  
      
  - include_role:
      name: logstash
      
  - include_role:
      name: filebeats

  - include_role:
      name: bro
      
  - name: kibana
    include_role:
      name: kibana
      
  # TODO NEEDS TO BE TESTED     
#  - include_role:
#      name: stenographer
      
  - include_role:
      name: nginx

  environment:
   http_proxy:  "{{ http_proxy }}"
   https_proxy: "{{ https_proxy }}"
   HTTP_PROXY:  "{{ http_proxy }}"
   HTTPS_PROXY: "{{ https_proxy }}"
  #######################################################
  #####################  Handlers  ######################
  #######################################################
# NOT CURRENTLY IN USE
#  handlers:
#    - name: force sync time
#      command: >
#        chronyc -a 'burst 3/4'; sleep 5; chronyc -a makestep
#
#    - name: configure monitor interfaces
#      shell: >
#        for intf in {{ rock_monifs | join(' ') }}; do
#          /sbin/ifup ${intf};
#        done
#
#    - name: create kafka bro topic
#      command: >
#        /opt/kafka/bin/kafka-topics.sh
#           --zookeeper 127.0.0.1:2181
#           --create
#           --replication-factor 1
#           --topic bro-raw
#           --partitions 1
#
#    - name: create kafka suricata topic
#      command: >
#        /opt/kafka/bin/kafka-topics.sh
#           --zookeeper 127.0.0.1:2181
#           --create
#           --replication-factor 1
#           --topic suricata-raw
#           --partitions 1
#
#    - name: create kafka fsf topic
#      command: >
#        /opt/kafka/bin/kafka-topics.sh
#           --zookeeper 127.0.0.1:2181
#           --create
#           --replication-factor 1
#           --topic fsf-raw
#           --partitions 1
#
#    - name: reload systemd
#      command: systemctl daemon-reload
